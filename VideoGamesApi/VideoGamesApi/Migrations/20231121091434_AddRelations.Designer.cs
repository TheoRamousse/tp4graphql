// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VideoGamesApi.Data;

#nullable disable

namespace VideoGamesApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231121091434_AddRelations")]
    partial class AddRelations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.14");

            modelBuilder.Entity("VideoGamesApi.Entities.EditorEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Editor");
                });

            modelBuilder.Entity("VideoGamesApi.Entities.EditorGameRelation", b =>
                {
                    b.Property<int>("EditorId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GameId")
                        .HasColumnType("INTEGER");

                    b.HasKey("EditorId", "GameId");

                    b.HasIndex("GameId");

                    b.ToTable("EditorGameRelation");
                });

            modelBuilder.Entity("VideoGamesApi.Entities.GameEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Genres")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Platforms")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PublicationDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Game");
                });

            modelBuilder.Entity("VideoGamesApi.Entities.StudioEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Studio");
                });

            modelBuilder.Entity("VideoGamesApi.Entities.StudioGameRelation", b =>
                {
                    b.Property<int>("StudioId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GameId")
                        .HasColumnType("INTEGER");

                    b.HasKey("StudioId", "GameId");

                    b.HasIndex("GameId");

                    b.ToTable("StudioGameRelation");
                });

            modelBuilder.Entity("VideoGamesApi.Entities.EditorGameRelation", b =>
                {
                    b.HasOne("VideoGamesApi.Entities.EditorEntity", "Editor")
                        .WithMany("Games")
                        .HasForeignKey("EditorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VideoGamesApi.Entities.GameEntity", "Game")
                        .WithMany("Editors")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Editor");

                    b.Navigation("Game");
                });

            modelBuilder.Entity("VideoGamesApi.Entities.StudioGameRelation", b =>
                {
                    b.HasOne("VideoGamesApi.Entities.GameEntity", "Game")
                        .WithMany("Studios")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VideoGamesApi.Entities.StudioEntity", "Studio")
                        .WithMany("Games")
                        .HasForeignKey("StudioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Studio");
                });

            modelBuilder.Entity("VideoGamesApi.Entities.EditorEntity", b =>
                {
                    b.Navigation("Games");
                });

            modelBuilder.Entity("VideoGamesApi.Entities.GameEntity", b =>
                {
                    b.Navigation("Editors");

                    b.Navigation("Studios");
                });

            modelBuilder.Entity("VideoGamesApi.Entities.StudioEntity", b =>
                {
                    b.Navigation("Games");
                });
#pragma warning restore 612, 618
        }
    }
}
